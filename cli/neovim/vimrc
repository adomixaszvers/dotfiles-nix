
let mapleader = " "

" Tab specific options
set tabstop=8                   "A tab is 8 spaces
set expandtab                   "Always uses spaces instead of tabs
set softtabstop=4               "Insert 4 spaces when tab is pressed
set shiftwidth=4                "An indent is 4 spaces
set shiftround                  "Round indent to nearest shiftwidth multiple

set number
set relativenumber
set path+=**
set list
set inccommand=nosplit
set background=dark
set cursorline

" let g:solarized_termcolors=256
" let g:solarized_termtrans=1
colorscheme dracula

set noshowmode

let g:hardtime_default_on = 0
let g:hardtime_showmsg = 1
let g:hardtime_allow_different_key = 1

let g:rainbow_active = 1
map <leader>f :Files<CR>
map <leader>n <Plug>(ale_next_wrap)
map <leader>p <Plug>(ale_previous_wrap)
noremap - -
set updatetime=100

let g:lightline = {
            \   'colorscheme': 'wombat',
            \   'active': {
            \     'left':[ [ 'mode', 'paste' ],
            \              [ 'gitbranch', 'readonly', 'filename', 'modified' ]
            \     ],
            \     'right': [ [ 'lineinfo' ],
            \            [ 'percent' ],
            \            [ 'fileformat', 'fileencoding', 'filetype' ],
            \            [ 'linter_checking', 'linter_errors', 'linter_warnings', 'linter_ok' ],
            \     ]
            \   },
            \   'component': {
            \     'lineinfo': ' %3l:%-2v',
            \   },
            \   'component_function': {
            \     'gitbranch': 'fugitive#head',
            \   }
            \ }
let g:lightline.tabline          = {'left': [['buffers']], 'right': [['close']]}
let g:lightline.component_expand = {
            \ 'buffers': 'lightline#bufferline#buffers',
            \ 'linter_checking': 'lightline#ale#checking',
            \ 'linter_warnings': 'lightline#ale#warnings',
            \ 'linter_errors': 'lightline#ale#errors',
            \ 'linter_ok': 'lightline#ale#ok',
            \ }
if !empty($DISPLAY)
    let g:lightline.separator = {
                \   'left': '', 'right': ''
                \}
    let g:lightline.subseparator = {
                \   'left': '', 'right': ''
                \}
else
    set guicursor=
endif
let g:lightline.component_type   = {
            \ 'buffers': 'tabsel',
            \ 'linter_checking': 'left',
            \ 'linter_warnings': 'warning',
            \ 'linter_errors': 'error',
            \ 'linter_ok': 'left',
            \}
set showtabline=2
autocmd BufWritePost,TextChanged,TextChangedI * call lightline#update()

set grepprg=rg\ --vimgrep\ --no-heading\ --smart-case
