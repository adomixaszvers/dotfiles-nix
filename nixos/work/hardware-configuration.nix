# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "thunderbolt"
    "nvme"
    "usbhid"
    "usb_storage"
    "sd_mod"
    "rtsx_pci_sdmmc"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/c4ba101c-f7c4-42b0-854e-ca481f29f969";
    fsType = "btrfs";
    options = [ "subvol=root/nixos/current" ];
  };

  fileSystems."/var/lib/containers/storage" = {
    device = "/dev/disk/by-uuid/c4ba101c-f7c4-42b0-854e-ca481f29f969";
    fsType = "btrfs";
    options = [ "subvol=root/containers/current" ];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/c4ba101c-f7c4-42b0-854e-ca481f29f969";
    fsType = "btrfs";
    options = [ "subvol=local/nix/current" ];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/c4ba101c-f7c4-42b0-854e-ca481f29f969";
    fsType = "btrfs";
    options = [ "subvol=home/current" ];
  };

  fileSystems."/home/adomas/.local/share/libvirt" = {
    device = "/dev/disk/by-uuid/c4ba101c-f7c4-42b0-854e-ca481f29f969";
    fsType = "btrfs";
    options = [ "subvol=adomas/libvirt/current" ];
  };

  fileSystems."/home/adomas/.local/share/containers/storage" = {
    device = "/dev/disk/by-uuid/c4ba101c-f7c4-42b0-854e-ca481f29f969";
    fsType = "btrfs";
    options = [ "subvol=adomas/containers/current" ];
  };

  fileSystems."/home/adomas/.local/share/Steam" = {
    device = "/dev/disk/by-uuid/c4ba101c-f7c4-42b0-854e-ca481f29f969";
    fsType = "btrfs";
    options = [ "subvol=adomas/steam/current" ];
  };

  fileSystems."/tmp" = {
    device = "/dev/disk/by-uuid/c4ba101c-f7c4-42b0-854e-ca481f29f969";
    fsType = "btrfs";
    options = [ "subvol=local/tmp/current" ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/2641-D99C";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  fileSystems."/var/lib/libvirt" = {
    device = "/dev/disk/by-uuid/c4ba101c-f7c4-42b0-854e-ca481f29f969";
    fsType = "btrfs";
    options = [ "subvol=root/libvirt/current" ];
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/2d0b3a0d-d438-4c12-b14d-8b879d9777b4"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s13f0u2u2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp9s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
